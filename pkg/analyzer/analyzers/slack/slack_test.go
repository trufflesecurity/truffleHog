package slack

import (
	"encoding/json"
	"testing"
	"time"

	"github.com/trufflesecurity/trufflehog/v3/pkg/analyzer/analyzers"
	"github.com/trufflesecurity/trufflehog/v3/pkg/analyzer/config"
	"github.com/trufflesecurity/trufflehog/v3/pkg/common"
	"github.com/trufflesecurity/trufflehog/v3/pkg/context"
)

func TestAnalyzer_Analyze(t *testing.T) {
	ctx, cancel := context.WithTimeout(context.Background(), time.Second*5)
	defer cancel()
	testSecrets, err := common.GetSecret(ctx, "trufflehog-testing", "detectors2")
	if err != nil {
		t.Fatalf("could not get test secrets from GCP: %s", err)
	}

	tests := []struct {
		name    string
		key     string
		want    string // JSON string
		wantErr bool
	}{
		{
			name: "valid Slack key",
			key:  testSecrets.MustGetField("SLACK"),
			want: `{
				"AnalyzerType":16,
				"Bindings":[
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"identify",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"channels:history",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"conversations.history",
						 "Parent":{
							"Value":"channels:history",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"conversations.replies",
						 "Parent":{
							"Value":"channels:history",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"groups:history",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"im:history",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"channels:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"channels.info",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"conversations.info",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"conversations.list",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"conversations.members",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"groups.info",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"im.list",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"mpim.list",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"users.conversations",
						 "Parent":{
							"Value":"channels:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"emoji:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"emoji.list",
						 "Parent":{
							"Value":"emoji:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"files:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"files.info",
						 "Parent":{
							"Value":"files:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"files.list",
						 "Parent":{
							"Value":"files:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"groups:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"im:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"stars:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"stars.list",
						 "Parent":{
							"Value":"stars:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"pins:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"pins.list",
						 "Parent":{
							"Value":"pins:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"usergroups:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"usergroups.list",
						 "Parent":{
							"Value":"usergroups:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"usergroups.users.list",
						 "Parent":{
							"Value":"usergroups:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"dnd:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"dnd.info",
						 "Parent":{
							"Value":"dnd:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"dnd.teamInfo",
						 "Parent":{
							"Value":"dnd:read",
							"Parent":null
						 }
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"calls:read",
						 "Parent":null
					  }
				   },
				   {
					  "Resource":{
						 "Name":"marge.haskell.bridge",
						 "FullyQualifiedName":"USMD5JM0F",
						 "Type":"user",
						 "Metadata":{
							"team":"ct.org",
							"team_id":"TSMCXP5FH",
							"url":"https://ctorgworkspace.slack.com/"
						 },
						 "Parent":null
					  },
					  "Permission":{
						 "Value":"calls.info",
						 "Parent":{
							"Value":"calls:read",
							"Parent":null
						 }
					  }
				   }
				],
				"UnboundedResources":null,
				"Metadata":null
			 }`,
			wantErr: false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			a := Analyzer{Cfg: &config.Config{}}
			got, err := a.Analyze(ctx, map[string]string{"key": tt.key})
			if (err != nil) != tt.wantErr {
				t.Errorf("Analyzer.Analyze() error = %v, wantErr %v", err, tt.wantErr)
				return
			}

			// Marshal the actual result to JSON
			gotJSON, err := json.Marshal(got)
			if err != nil {
				t.Fatalf("could not marshal got to JSON: %s", err)
			}

			// Parse the expected JSON string
			var wantObj analyzers.AnalyzerResult
			if err := json.Unmarshal([]byte(tt.want), &wantObj); err != nil {
				t.Fatalf("could not unmarshal want JSON string: %s", err)
			}

			// Marshal the expected result to JSON (to normalize)
			wantJSON, err := json.Marshal(wantObj)
			if err != nil {
				t.Fatalf("could not marshal want to JSON: %s", err)
			}

			// Compare the JSON strings
			if string(gotJSON) != string(wantJSON) {
				// Pretty-print both JSON strings for easier comparison
				var gotIndented, wantIndented []byte
				gotIndented, err = json.MarshalIndent(got, "", " ")
				if err != nil {
					t.Fatalf("could not marshal got to indented JSON: %s", err)
				}
				wantIndented, err = json.MarshalIndent(wantObj, "", " ")
				if err != nil {
					t.Fatalf("could not marshal want to indented JSON: %s", err)
				}
				t.Errorf("Analyzer.Analyze() = %s, want %s", gotIndented, wantIndented)
			}
		})
	}
}
